// BSLLS:DeprecatedMessage-off
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.СхемаOpenApi = Обработки.ПримерРаботыВалидатора.ПолучитьМакет("OpenApi").ПолучитьТекст();
	ЗагрузитьJsonДляПроверки();
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	ЗагрузитьJsonДляПроверки();
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Валидировать(Команда)
	ВалидироватьНаСервере();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ВалидироватьНаСервере()
	МодельДанных = ВалидаторПакетовПовтИсп.JsonВОбъект(Объект.JsonДляПроверки);
	МассивОшибок = ВалидаторПакетов.Валидировать(МодельДанных, "complex_object", Объект.СхемаOpenApi);
	
	Если МассивОшибок.количество() = 0 Тогда
		Сообщить("Валидация прошла успешно!");
		Возврат;
	КонецЕсли;
	
	Для Каждого Ошибка Из МассивОшибок Цикл
		Сообщить(Ошибка, СтатусСообщения.Внимание);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьJsonДляПроверки() // BSLLS:LatinAndCyrillicSymbolInWord-off
Если Переключатель Тогда
	ИмяМакета = "НевалидныйJson";
Иначе
	ИмяМакета = "Валидныйjson";
КонецЕсли;
Объект.JsonДляПроверки = Обработки.ПримерРаботыВалидатора.ПолучитьМакет(ИмяМакета).ПолучитьТекст();
КонецПроцедуры

#КонецОбласти
