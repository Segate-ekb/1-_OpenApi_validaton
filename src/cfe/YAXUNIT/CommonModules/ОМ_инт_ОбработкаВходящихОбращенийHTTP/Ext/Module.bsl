// BSLLS-off
// @strict-types
/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
    Варианты = ЮТест.Варианты("ИдентификаторПотока,ИдентификаторСообщения, ТелоСообщения, ОжидаемоеИсключение, ПредставлениеТеста")
    .Добавить("",
    Новый УникальныйИдентификатор,
    Неопределено,
    "flow_id is missing",
    "Пустой flow_id")
    .Добавить("СоздатьПоток",
    "",
    Неопределено,
    "message_id is missing",
    "Незаполненый ИдентификаторСообщения."  )
    .Добавить("СоздатьПоток",
    "1234",
    Неопределено,
    "message_id must be uuid",
    "Идентификатор не uuid.")
    .Добавить(ЮТест.Данные().СлучайнаяСтрока(),
    Новый УникальныйИдентификатор,
    Неопределено,
    "unknown flow_id",
    "Левый flow_id.")
    .Добавить("СоздатьПоток",
    Новый УникальныйИдентификатор,
    "",
    "body is empty",
    "Пустое тело.")
    .Добавить("СоздатьПоток",
    Новый УникальныйИдентификатор,
    "{incorrect: ""body"",}",
    "payload deserialization failed.",
    "Кривое тело.");

    ЮТТесты.УдалениеТестовыхДанных().Втранзакции()
    	.ДобавитьТест("ОбработатьВходящийПотокСПравильнымЗапросом")
        .ДобавитьТест("ОбработатьВходящийПотокСОшибкойНаСторонеСервера");
        
       Для Каждого Вариант Из Варианты.СписокВариантов() Цикл
       	      ЮТТесты.УдалениеТестовыхДанных().Втранзакции().ДобавитьТест("ОбработатьВходящийПотокСЗапросомСНезаполненнымиОбязательнымиПолями")
            .Представление(Вариант.ПредставлениеТеста, Истина)
            .СПараметрами(Вариант.ИдентификаторПотока,
                            Вариант.ИдентификаторСообщения,
                            Вариант.ТелоСообщения,
                            Вариант.ОжидаемоеИсключение);
       КонецЦикла;
КонецПроцедуры

#Область События

Процедура ПередВсемиТестами() Экспорт

КонецПроцедуры

Процедура ПередКаждымТестом() Экспорт

КонецПроцедуры

Процедура ПослеКаждогоТеста() Экспорт

КонецПроцедуры

Процедура ПослеВсехТестов() Экспорт

КонецПроцедуры

#КонецОбласти

Процедура ОбработатьВходящийПотокСПравильнымЗапросом() Экспорт
         Поток = ГенераторТестовыхДанных.ПотокДанныхВходящий();
         ИдентификаторСообщения = Новый УникальныйИдентификатор;
         Запрос = ГенераторТестовыхДанных.HTTPСервисЗапрос(Поток.Код, Строка(ИдентификаторСообщения));
         Мокито.Обучение(инт_ОбработкаВходящихПотоков)
            .Когда("ОбработкаВходящегоСообщенияПоПотоку").Пропустить()
                .Прогон();
         Ответ = инт_ОбработкаВходящихОбращенийHTTP.ОбработкаВходящегоПотокаPOST(Запрос);
        
         ЮТест.ОжидаетЧто(Ответ)
            .Свойство("КодСостояния").Равно(200);

КонецПроцедуры

Процедура ОбработатьВходящийПотокСЗапросомСНезаполненнымиОбязательнымиПолями(ИдентификаторПотока = "", ИдентификаторСообщения = "", Тело = Неопределено, ОжидаемоеИсключение) Экспорт
    
    Если ИдентификаторПотока = "СоздатьПоток" Тогда
        ВходящийПоток = ГенераторТестовыхДанных.ПотокДанныхВходящий();
        ИдентификаторПотока = ВходящийПоток.Код;
    КонецЕсли;
    Запрос = ГенераторТестовыхДанных.HTTPСервисЗапрос(ИдентификаторПотока, Строка(ИдентификаторСообщения), Тело);
    Ответ = инт_ОбработкаВходящихОбращенийHTTP.ОбработкаВходящегоПотокаPOST(Запрос);
    
    ЮТест.ОжидаетЧто(Ответ)
            .Свойство("КодСостояния").БольшеИлиРавно(400).Меньше(500);
    ЮТест.ОжидаетЧто(Ответ.ПолучитьТелоКакСтроку()).Содержит(ОжидаемоеИсключение);
   
КонецПроцедуры

Процедура ОбработатьВходящийПотокСОшибкойНаСторонеСервера() Экспорт
         Поток = ГенераторТестовыхДанных.ПотокДанныхВходящий();
         ИдентификаторСообщения = Новый УникальныйИдентификатор;
         Запрос = ГенераторТестовыхДанных.HTTPСервисЗапрос(Поток.Код, ИдентификаторСообщения);
         
         Мокито.Обучение(инт_ОбработкаВходящихПотоков)
            .Когда("ОбработкаВходящегоСообщенияПоПотоку").ВыброситьИсключение("Все пропало! Гипс снимают, клиент уезжает!")
                .Прогон();
         
         Ответ = инт_ОбработкаВходящихОбращенийHTTP.ОбработкаВходящегоПотокаPOST(Запрос);
         
         ЮТест.ОжидаетЧто(Ответ)
            .Свойство("КодСостояния").БольшеИлиРавно(500);
 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
